// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/go-telegram-bot-api/telegram-bot-api (interfaces: HttpClient)

// Package mocks is a generated GoMock package.
package mocks

import (
	http "net/http"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockTGBotAPIHTTPClient is a mock of HttpClient interface.
type MockTGBotAPIHTTPClient struct {
	ctrl     *gomock.Controller
	recorder *MockTGBotAPIHTTPClientMockRecorder
}

// MockTGBotAPIHTTPClientMockRecorder is the mock recorder for MockTGBotAPIHTTPClient.
type MockTGBotAPIHTTPClientMockRecorder struct {
	mock *MockTGBotAPIHTTPClient
}

// NewMockTGBotAPIHTTPClient creates a new mock instance.
func NewMockTGBotAPIHTTPClient(ctrl *gomock.Controller) *MockTGBotAPIHTTPClient {
	mock := &MockTGBotAPIHTTPClient{ctrl: ctrl}
	mock.recorder = &MockTGBotAPIHTTPClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTGBotAPIHTTPClient) EXPECT() *MockTGBotAPIHTTPClientMockRecorder {
	return m.recorder
}

// Do mocks base method.
func (m *MockTGBotAPIHTTPClient) Do(arg0 *http.Request) (*http.Response, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Do", arg0)
	ret0, _ := ret[0].(*http.Response)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Do indicates an expected call of Do.
func (mr *MockTGBotAPIHTTPClientMockRecorder) Do(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Do", reflect.TypeOf((*MockTGBotAPIHTTPClient)(nil).Do), arg0)
}
